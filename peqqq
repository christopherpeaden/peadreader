[1mdiff --git a/app/assets/javascripts/channels/feeds_update_status.js b/app/assets/javascripts/channels/feeds_update_status.js[m
[1mindex 9c0507d..cf3e3e2 100644[m
[1m--- a/app/assets/javascripts/channels/feeds_update_status.js[m
[1m+++ b/app/assets/javascripts/channels/feeds_update_status.js[m
[36m@@ -22,21 +22,26 @@[m
       } else {[m
         var itemList = document.getElementsByClassName("list-group")[0];[m
         var items = document.getElementById("items").childNodes[1].childNodes;[m
[32m+[m[32m        console.log(items.length);[m
[32m+[m[41m        [m
[32m+[m[32m        if(items.length < 2) {[m
[32m+[m[32m          itemList.appendChild("");[m
[32m+[m[32m          itemList.appendChild(data["item"]);[m
[32m+[m[32m        } else {[m
[32m+[m
[32m+[m[32m          for(var x = 0; x <= items.length; x++) {[m
[32m+[m[32m            if(items[x].dataset != undefined) {[m
[32m+[m[32m              var dataPublished = data['item'].match(/2.*C/)[0];[m
 [m
[31m-        for(var x = 0; x <= items.length; x++) {[m
[31m-          if(items[x].dataset != undefined) {[m
[31m-            var dataPublished = data['item'].match(/2.*C/)[0];[m
[31m-[m
[31m-            console.log(x);[m
[31m-            console.log(items[x]);[m
[31m-            if (dataPublished > items[x].dataset.published) {[m
[31m-              //$('#items .list-group').prepend(data['item']); [m
[31m-              $(data["item"]).insertBefore(items[x]);[m
[31m-              $("").insertBefore(items[x]);[m
[31m-              break;[m
[32m+[m[32m              if (dataPublished > items[x].dataset.published) {[m
[32m+[m[32m                //$('#items .list-group').prepend(data['item']);[m[41m [m
[32m+[m[32m                $(data["item"]).insertBefore(items[x]);[m
[32m+[m[32m                $("").insertBefore(items[x]);[m
[32m+[m[32m                break;[m
[32m+[m[32m              }[m
             }[m
[31m-	  }[m
[31m-	}[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
       }[m
     },[m
 [m
[1mdiff --git a/app/channels/feeds_update_status_channel.rb b/app/channels/feeds_update_status_channel.rb[m
[1mindex 87c9b28..aa72fdc 100644[m
[1m--- a/app/channels/feeds_update_status_channel.rb[m
[1m+++ b/app/channels/feeds_update_status_channel.rb[m
[36m@@ -1,7 +1,8 @@[m
 # Be sure to restart your server when you modify this file. Action Cable runs in a loop that does not support auto reloading.[m
 class FeedsUpdateStatusChannel < ApplicationCable::Channel[m
[32m+[m[32m  attr_reader[m
   def subscribed[m
[31m-    stream_from "feeds_update_status_channel"[m
[32m+[m[32m    stream_from user_stream_name(current_user.id)[m[41m [m
   end[m
 [m
   def unsubscribed[m
[36m@@ -11,7 +12,7 @@[m [mclass FeedsUpdateStatusChannel < ApplicationCable::Channel[m
   def update[m
     feeds_with_errors = [][m
     current_user.feeds.each do |feed|[m
[31m-      ActionCable.server.broadcast("feeds_update_status_channel", "Updating #{feed.title}...")[m
[32m+[m[32m      ActionCable.server.broadcast(user_stream_name(current_user.id), "Updating #{feed.title}...")[m
       begin[m
         feed.fetch_and_save_new_items[m
       rescue[m
[36m@@ -33,15 +34,19 @@[m [mclass FeedsUpdateStatusChannel < ApplicationCable::Channel[m
 [m
       def update_successful_message[m
         ActionCable.server.broadcast([m
[31m-          "feeds_update_status_channel",[m
[32m+[m[32m          user_stream_name(current_user.id),[m
           "Feeds have been successfully updated."[m
         ) [m
       end[m
 [m
       def update_failure_message(feed_titles)[m
         ActionCable.server.broadcast([m
[31m-          "feeds_update_status_channel",[m
[32m+[m[32m          user_stream_name(current_user.id),[m
           "There was a problem with the following #{ActionController::Base.helpers.pluralize(feed_titles.count, 'feed')}: #{feed_titles.join(', ')}."[m
         ) [m
       end[m
[32m+[m
[32m+[m[32m      def user_stream_name(user_id)[m
[32m+[m[32m        "feeds_update_status_channel_user_#{user_id}"[m
[32m+[m[32m      end[m
 end[m
[1mdiff --git a/app/jobs/item_broadcast_job.rb b/app/jobs/item_broadcast_job.rb[m
[1mindex 600273b..b2a5f91 100644[m
[1m--- a/app/jobs/item_broadcast_job.rb[m
[1m+++ b/app/jobs/item_broadcast_job.rb[m
[36m@@ -2,7 +2,7 @@[m [mclass ItemBroadcastJob < ApplicationJob[m
   queue_as :default[m
 [m
   def perform(item)[m
[31m-    ActionCable.server.broadcast 'feeds_update_status_channel', item: render_item(item)[m
[32m+[m[32m    ActionCable.server.broadcast "feeds_update_status_channel_user_#{find_verified_user.id}", item: render_item(item)[m
   end[m
 [m
   private[m
[36m@@ -10,5 +10,4 @@[m [mclass ItemBroadcastJob < ApplicationJob[m
     def render_item(item)[m
       ApplicationController.renderer.render(partial: 'items/item', locals: { item: item })[m
     end[m
[31m-[m
 end[m
[1mdiff --git a/app/models/item.rb b/app/models/item.rb[m
[1mindex 93d3ae8..4bad135 100644[m
[1m--- a/app/models/item.rb[m
[1m+++ b/app/models/item.rb[m
[36m@@ -1,5 +1,4 @@[m
 class Item < ActiveRecord::Base[m
[31m-  after_create_commit { ItemBroadcastJob.perform_now self }[m
   belongs_to :feed[m
   belongs_to :user[m
   has_many :itemizations[m
[1mdiff --git a/app/services/new_item_checker.rb b/app/services/new_item_checker.rb[m
[1mindex 622bb71..f3cc688 100644[m
[1m--- a/app/services/new_item_checker.rb[m
[1m+++ b/app/services/new_item_checker.rb[m
[36m@@ -15,7 +15,7 @@[m [mclass NewItemChecker[m
     def  self.build_and_save_item_from_entry_attributes(feed, entry)[m
       item = build(feed, entry)[m
       item.category_ids = feed.category_ids[m
[31m-      item.save[m
[32m+[m[32m        ActionCable.server.broadcast "feeds_update_status_channel_user_#{feed.user.id}", item: render_item(item) if item.save[m
       #feed.items.create(item.attributes).id[m
     end[m
 [m
[36m@@ -40,4 +40,8 @@[m [mclass NewItemChecker[m
         entry.image if entry.respond_to?(:image)[m
       end[m
     end[m
[32m+[m
[32m+[m[32m    def self.render_item(item)[m
[32m+[m[32m      ApplicationController.renderer.render(partial: 'items/item', locals: { item: item })[m
[32m+[m[32m    end[m
 end[m
